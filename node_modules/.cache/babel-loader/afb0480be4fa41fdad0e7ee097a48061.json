{"ast":null,"code":"/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nconst fetch = require('node-fetch');\nconst jwt = require('jsonwebtoken');\nconst FormData = require('form-data');\nconst MISSING_PARAMS = 'missing_params';\nconst SIGN_FAILED = 'sign_failed';\nconst REQUEST_FAILED = 'request_failed';\nconst UNEXPECTED_RESPONSE_BODY = 'invalid_response_body';\nconst throwRequestFailedError = details => {\n  const error = new Error(`Request failed while swapping the jwt token. ${details}`);\n  error.code = REQUEST_FAILED;\n  throw error;\n};\nconst throwUnexpectedResponseError = details => {\n  const error = new Error(`Unexpected response received while swapping the jwt token. ${details}`);\n  error.code = UNEXPECTED_RESPONSE_BODY;\n  throw error;\n};\nasync function authorize(options) {\n  let {\n    clientId,\n    technicalAccountId,\n    orgId,\n    clientSecret,\n    privateKey,\n    passphrase = '',\n    metaScopes,\n    ims = 'https://ims-na1.adobelogin.com'\n  } = options;\n  const errors = [];\n  !clientId ? errors.push('clientId') : '';\n  !technicalAccountId ? errors.push('technicalAccountId') : '';\n  !orgId ? errors.push('orgId') : '';\n  !clientSecret ? errors.push('clientSecret') : '';\n  !privateKey ? errors.push('privateKey') : '';\n  !metaScopes || metaScopes.length === 0 ? errors.push('metaScopes') : '';\n  if (errors.length > 0) {\n    const missingParamsError = new Error(`Required parameter(s) ${errors.join(', ')} are missing`);\n    missingParamsError.code = MISSING_PARAMS;\n    throw missingParamsError;\n  }\n  if (metaScopes.constructor !== Array) {\n    metaScopes = metaScopes.split(',');\n  }\n  const jwtPayload = {\n    exp: Math.round(300 + Date.now() / 1000),\n    iss: orgId,\n    sub: technicalAccountId,\n    aud: `${ims}/c/${clientId}`\n  };\n  for (let i = 0; i < metaScopes.length; i++) {\n    if (metaScopes[i].indexOf('https') > -1) {\n      jwtPayload[metaScopes[i]] = true;\n    } else {\n      jwtPayload[`${ims}/s/${metaScopes[i]}`] = true;\n    }\n  }\n  let token;\n  try {\n    token = jwt.sign(jwtPayload, {\n      key: privateKey,\n      passphrase\n    }, {\n      algorithm: 'RS256'\n    });\n  } catch (tokenError) {\n    tokenError.code = SIGN_FAILED;\n    throw tokenError;\n  }\n  const form = new FormData();\n  form.append('client_id', clientId);\n  form.append('client_secret', clientSecret);\n  form.append('jwt_token', token);\n  const postOptions = {\n    method: 'POST',\n    body: form,\n    headers: form.getHeaders()\n  };\n  return fetch(`${ims}/ims/exchange/jwt/`, postOptions).catch(e => throwRequestFailedError(e.message)).then(res => {\n    return res.json().then(data => {\n      return {\n        ok: res.ok,\n        json: data\n      };\n    });\n  }).then(_ref => {\n    let {\n      ok,\n      json\n    } = _ref;\n    const {\n      access_token,\n      error,\n      error_description\n    } = json;\n    if (ok && access_token) {\n      return json;\n    }\n    if (error && error_description) {\n      const swapError = new Error(error_description);\n      swapError.code = error;\n      throw swapError;\n    } else {\n      throwUnexpectedResponseError(`The response body is as follows: ${JSON.stringify(json)}`);\n    }\n  });\n}\nmodule.exports = authorize;","map":{"version":3,"names":["fetch","require","jwt","FormData","MISSING_PARAMS","SIGN_FAILED","REQUEST_FAILED","UNEXPECTED_RESPONSE_BODY","throwRequestFailedError","details","error","Error","code","throwUnexpectedResponseError","authorize","options","clientId","technicalAccountId","orgId","clientSecret","privateKey","passphrase","metaScopes","ims","errors","push","length","missingParamsError","join","constructor","Array","split","jwtPayload","exp","Math","round","Date","now","iss","sub","aud","i","indexOf","token","sign","key","algorithm","tokenError","form","append","postOptions","method","body","headers","getHeaders","catch","e","message","then","res","json","data","ok","access_token","error_description","swapError","JSON","stringify","module","exports"],"sources":["/Users/lamont/Workspace/andy/wknd-app/node_modules/@adobe/jwt-auth/index.js"],"sourcesContent":["/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nconst fetch = require('node-fetch');\nconst jwt = require('jsonwebtoken');\nconst FormData = require('form-data');\n\nconst MISSING_PARAMS = 'missing_params';\nconst SIGN_FAILED = 'sign_failed';\nconst REQUEST_FAILED = 'request_failed';\nconst UNEXPECTED_RESPONSE_BODY = 'invalid_response_body';\n\nconst throwRequestFailedError = details => {\n  const error = new Error(\n    `Request failed while swapping the jwt token. ${details}`\n  );\n  error.code = REQUEST_FAILED;\n  throw error;\n};\n\nconst throwUnexpectedResponseError = details => {\n  const error = new Error(\n    `Unexpected response received while swapping the jwt token. ${details}`\n  );\n  error.code = UNEXPECTED_RESPONSE_BODY;\n  throw error;\n};\n\nasync function authorize(options) {\n  let {\n    clientId,\n    technicalAccountId,\n    orgId,\n    clientSecret,\n    privateKey,\n    passphrase = '',\n    metaScopes,\n    ims = 'https://ims-na1.adobelogin.com'\n  } = options;\n\n  const errors = [];\n  !clientId ? errors.push('clientId') : '';\n  !technicalAccountId ? errors.push('technicalAccountId') : '';\n  !orgId ? errors.push('orgId') : '';\n  !clientSecret ? errors.push('clientSecret') : '';\n  !privateKey ? errors.push('privateKey') : '';\n  !metaScopes || metaScopes.length === 0 ? errors.push('metaScopes') : '';\n  if (errors.length > 0) {\n    const missingParamsError = new Error(\n      `Required parameter(s) ${errors.join(', ')} are missing`\n    );\n    missingParamsError.code = MISSING_PARAMS;\n    throw missingParamsError;\n  }\n\n  if (metaScopes.constructor !== Array) {\n    metaScopes = metaScopes.split(',');\n  }\n\n  const jwtPayload = {\n    exp: Math.round(300 + Date.now() / 1000),\n    iss: orgId,\n    sub: technicalAccountId,\n    aud: `${ims}/c/${clientId}`\n  };\n\n  for (let i = 0; i < metaScopes.length; i++) {\n    if (metaScopes[i].indexOf('https') > -1) {\n      jwtPayload[metaScopes[i]] = true;\n    } else {\n      jwtPayload[`${ims}/s/${metaScopes[i]}`] = true;\n    }\n  }\n\n  let token;\n  try {\n    token = jwt.sign(\n      jwtPayload,\n      { key: privateKey, passphrase },\n      { algorithm: 'RS256' }\n    );\n  } catch (tokenError) {\n    tokenError.code = SIGN_FAILED;\n    throw tokenError;\n  }\n\n  const form = new FormData();\n  form.append('client_id', clientId);\n  form.append('client_secret', clientSecret);\n  form.append('jwt_token', token);\n\n  const postOptions = {\n    method: 'POST',\n    body: form,\n    headers: form.getHeaders()\n  };\n\n  return fetch(`${ims}/ims/exchange/jwt/`, postOptions)\n    .catch(e => throwRequestFailedError(e.message))\n    .then(res => {\n      return res.json().then(data => {\n        return {\n          ok: res.ok,\n          json: data\n        };\n      });\n    })\n    .then(({ ok, json }) => {\n      const { access_token, error, error_description } = json;\n      if (ok && access_token) {\n        return json;\n      }\n\n      if (error && error_description) {\n        const swapError = new Error(error_description);\n        swapError.code = error;\n        throw swapError;\n      } else {\n        throwUnexpectedResponseError(\n          `The response body is as follows: ${JSON.stringify(json)}`\n        );\n      }\n    });\n}\n\nmodule.exports = authorize;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}