{"ast":null,"code":"const spaSiteTemplateName = \"aem-site-template-wknd-spa\";\nconst osgiSiteConfig = \"com.adobe.aem.wcm.site.manager.config.SiteConfig\";\nexport async function getRemoteSite() {\n  try {\n    const spaSites = [];\n    const response = await fetch(`/content.1.json`, {\n      mode: \"no-cors\"\n    });\n    const content = await response.json();\n    const sites = Object.keys(content).filter(key => typeof content[key] === \"object\" && content[key][\"jcr:primaryType\"] === \"cq:Page\");\n    for (const i in sites) {\n      try {\n        const response = await fetch(`/conf/${sites[i]}/sling:configs.1.json`);\n        const rawData = await response.json();\n        if ((await rawData) && rawData.hasOwnProperty(osgiSiteConfig)) {\n          const {\n            siteTemplatePath\n          } = rawData[osgiSiteConfig];\n          if (siteTemplatePath && siteTemplatePath.includes(spaSiteTemplateName)) spaSites.push(sites[i]);\n        }\n      } catch (e) {\n        console.log(\"Error fetching site conf data\", e);\n      }\n    }\n    return spaSites;\n  } catch (e) {\n    console.log(\"Error fetching AEM Content\", e);\n    return [];\n  }\n}","map":{"version":3,"names":["spaSiteTemplateName","osgiSiteConfig","getRemoteSite","spaSites","response","fetch","mode","content","json","sites","Object","keys","filter","key","i","rawData","hasOwnProperty","siteTemplatePath","includes","push","e","console","log"],"sources":["/Users/lamont/Workspace/andy/wknd-app/src/utils/getRemoteSite.js"],"sourcesContent":["const spaSiteTemplateName = \"aem-site-template-wknd-spa\";\nconst osgiSiteConfig = \"com.adobe.aem.wcm.site.manager.config.SiteConfig\";\n\nexport async function getRemoteSite() {\n  try {\n    const spaSites = [];\n    const response = await fetch(`/content.1.json`, { mode: \"no-cors\" });\n    const content = await response.json();\n    const sites = Object.keys(content).filter(key => typeof content[key] === \"object\" && content[key][\"jcr:primaryType\"] === \"cq:Page\");\n\n    for (const i in sites) {\n      try {\n        const response = await fetch(`/conf/${sites[i]}/sling:configs.1.json`);\n        const rawData = await response.json();\n\n        if (await rawData && rawData.hasOwnProperty(osgiSiteConfig)) {\n          const { siteTemplatePath } = rawData[osgiSiteConfig];\n          if (siteTemplatePath && siteTemplatePath.includes(spaSiteTemplateName)) spaSites.push(sites[i]);\n        }\n\n      } catch (e) {\n        console.log(\"Error fetching site conf data\", e);\n      }\n    }\n\n    return spaSites;\n\n  } catch (e) {\n    console.log(\"Error fetching AEM Content\", e);\n    return [];\n  }\n}"],"mappings":"AAAA,MAAMA,mBAAmB,GAAG,4BAA4B;AACxD,MAAMC,cAAc,GAAG,kDAAkD;AAEzE,OAAO,eAAeC,aAAa,GAAG;EACpC,IAAI;IACF,MAAMC,QAAQ,GAAG,EAAE;IACnB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,iBAAgB,EAAE;MAAEC,IAAI,EAAE;IAAU,CAAC,CAAC;IACpE,MAAMC,OAAO,GAAG,MAAMH,QAAQ,CAACI,IAAI,EAAE;IACrC,MAAMC,KAAK,GAAGC,MAAM,CAACC,IAAI,CAACJ,OAAO,CAAC,CAACK,MAAM,CAACC,GAAG,IAAI,OAAON,OAAO,CAACM,GAAG,CAAC,KAAK,QAAQ,IAAIN,OAAO,CAACM,GAAG,CAAC,CAAC,iBAAiB,CAAC,KAAK,SAAS,CAAC;IAEnI,KAAK,MAAMC,CAAC,IAAIL,KAAK,EAAE;MACrB,IAAI;QACF,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAAE,SAAQI,KAAK,CAACK,CAAC,CAAE,uBAAsB,CAAC;QACtE,MAAMC,OAAO,GAAG,MAAMX,QAAQ,CAACI,IAAI,EAAE;QAErC,IAAI,OAAMO,OAAO,KAAIA,OAAO,CAACC,cAAc,CAACf,cAAc,CAAC,EAAE;UAC3D,MAAM;YAAEgB;UAAiB,CAAC,GAAGF,OAAO,CAACd,cAAc,CAAC;UACpD,IAAIgB,gBAAgB,IAAIA,gBAAgB,CAACC,QAAQ,CAAClB,mBAAmB,CAAC,EAAEG,QAAQ,CAACgB,IAAI,CAACV,KAAK,CAACK,CAAC,CAAC,CAAC;QACjG;MAEF,CAAC,CAAC,OAAOM,CAAC,EAAE;QACVC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEF,CAAC,CAAC;MACjD;IACF;IAEA,OAAOjB,QAAQ;EAEjB,CAAC,CAAC,OAAOiB,CAAC,EAAE;IACVC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,CAAC,CAAC;IAC5C,OAAO,EAAE;EACX;AACF"},"metadata":{},"sourceType":"module"}